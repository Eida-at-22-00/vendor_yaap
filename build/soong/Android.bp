
bootstrap_go_package {
    name: "soong-yaap-generator",
    pkgPath: "yaap/soong/generator",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
        "soong-shared",
    ],
    srcs: [
        "generator/generator.go",
        "generator/variables.go",
    ],
    pluginFor: ["soong_build"],
}

yaap_generator {
    name: "generated_kernel_includes",

    // The headers make command
    cmd: "PATH=$(ORIG_PATH):$(TARGET_KERNEL_CLANG_PATH)/bin make $(KERNEL_MAKE_FLAGS) -C $(TARGET_KERNEL_SOURCE) O=$(KERNEL_BUILD_OUT_PREFIX)$(genDir) ARCH=$(KERNEL_ARCH) $(KERNEL_CROSS_COMPILE) headers_install && vendor/yaap/tools/clean_headers.sh $(KERNEL_BUILD_OUT_PREFIX)$(genDir)",

    // Directories that can be imported by a cc_* module generated_headers property
    export_include_dirs: [
        "usr/audio/include/uapi",
        "usr/include",
        "usr/include/audio",
        "usr/include/audio/include/uapi",
        "usr/techpack/audio/include",
    ],

    // Sources for dependency tracking
    dep_root: "$(TARGET_KERNEL_SOURCE)",
    dep_files: [
        "Makefile",
        "include/**/*",
        "arch/$(KERNEL_ARCH)/include/**/*",
        "techpack/audio/include/**/*",
    ],
}

yaap_generator {
    name: "prebuilt_kernel_includes",

    // The headers extract command
    cmd: "mkdir -p $(KERNEL_BUILD_OUT_PREFIX)$(genDir) && gzip -d < $(TARGET_PREBUILT_KERNEL_HEADERS) | tar -x -C $(KERNEL_BUILD_OUT_PREFIX)$(genDir) && vendor/yaap/tools/clean_headers.sh $(KERNEL_BUILD_OUT_PREFIX)$(genDir)",

    // Directories that can be imported by a cc_* module generated_headers property
    export_include_dirs: [
        "usr/audio/include/uapi",
        "usr/include",
        "usr/include/audio",
        "usr/include/audio/include/uapi",
        "usr/techpack/audio/include",
    ],
}

bootstrap_go_package {
    name: "soong-yaap-mkdir",
    pkgPath: "yaap/soong/mkdir",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
    ],
    srcs: [
        "mkdir/init.go",
        "mkdir/mkdir.go",
    ],
    pluginFor: ["soong_build"],
}

cc_defaults {
    name: "generated_kernel_header_defaults",
    generated_headers: ["generated_kernel_includes"],
    export_generated_headers: ["generated_kernel_includes"],
    vendor_available: true,
    recovery_available: true,
}

cc_defaults {
    name: "prebuilt_kernel_header_defaults",
    generated_headers: ["prebuilt_kernel_includes"],
    export_generated_headers: ["prebuilt_kernel_includes"],
    vendor_available: true,
    recovery_available: true,
}

cc_library_headers {
    name: "generated_kernel_headers",
    defaults: ["generated_kernel_header_defaults"],
}

cc_library_headers {
    name: "qti_kernel_headers",
    defaults: ["generated_kernel_header_defaults"],
}

soong_config_module_type {
    name: "aapt_version_code",
    module_type: "java_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["aapt_version_code"],
    properties: ["aaptflags"],
}

aapt_version_code {
    name: "aapt_version_code_defaults",
    soong_config_variables: {
        aapt_version_code: {
            aaptflags: [
                "--version-code",
                "%s",
            ],
        },
    },
}

soong_config_module_type {
    name: "sdmcore_has_is_display_hw_available",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    bool_variables: ["sdmcore_has_is_display_hw_available_func"],
    properties: ["cflags"],
}

sdmcore_has_is_display_hw_available {
    name: "sdmcore_has_is_display_hw_available_func_defaults",
    soong_config_variables: {
        sdmcore_has_is_display_hw_available_func: {
            cflags: ["-DSDMCORE_HAS_IS_DISPLAY_HW_AVAILABLE_FUNC"],
        },
    },
}

soong_config_module_type {
    name: "camera_override_format_from_reserved",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    bool_variables: ["camera_override_format_from_reserved"],
    properties: ["cppflags"],
}
camera_override_format_from_reserved {
    name: "camera_override_format_from_reserved_defaults",
    soong_config_variables: {
        camera_override_format_from_reserved: {
            cppflags: ["-DTARGET_CAMERA_OVERRIDE_FORMAT_FROM_RESERVED"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_udfps_lib",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["target_surfaceflinger_udfps_lib"],
    properties: [
        "cppflags",
        "whole_static_libs",
    ],
}

soong_config_module_type {
    name: "target_camera_package_name",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["target_camera_package_name"],
    properties: ["cppflags"],
}

target_camera_package_name {
    name: "camera_package_name_defaults",
    soong_config_variables: {
        target_camera_package_name: {
            cppflags: ["-DCAMERA_PACKAGE_NAME=\"%s\""],
        },
    },
}

soong_config_module_type {
    name: "uses_miui_camera",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    bool_variables: ["uses_miui_camera"],
    properties: ["cppflags"],
}

uses_miui_camera {
    name: "uses_miui_camera_defaults",
    soong_config_variables: {
        uses_miui_camera: {
            cppflags: ["-DTARGET_USES_MIUI_CAMERA"],
        },
    },
}

surfaceflinger_udfps_lib {
    name: "surfaceflinger_udfps_lib_defaults",
    soong_config_variables: {
        target_surfaceflinger_udfps_lib: {
            cppflags: ["-DTARGET_PROVIDES_UDFPS_LIB"],
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "trust_usb_control",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: [
        "target_trust_usb_control_path",
        "target_trust_usb_control_enable",
        "target_trust_usb_control_disable",
    ],
    properties: ["cppflags"],
}

trust_usb_control {
    name: "trust_usb_control_defaults",
    soong_config_variables: {
        target_trust_usb_control_path: {
            cppflags: ["-DUSB_CONTROL_PATH=\"%s\""],
        },
        target_trust_usb_control_enable: {
            cppflags: ["-DUSB_CONTROL_ENABLE=\"%s\""],
        },
        target_trust_usb_control_disable: {
            cppflags: ["-DUSB_CONTROL_DISABLE=\"%s\""],
        },
    },
}

soong_config_module_type {
    name: "charge_rate_multiplier",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: [
        "target_charge_rate_multiplier",
    ],
    properties: ["cppflags"],
}

charge_rate_multiplier {
    name: "charge_rate_multiplier_defaults",
    soong_config_variables: {
        target_charge_rate_multiplier: {
            cppflags: ["-DCHARGE_RATE_MULTIPLIER=%s"],
        },
    },
}

soong_config_module_type {
    name: "surfaceflinger_qcom_extensions",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    value_variables: ["qcom_display_headers_namespace"],
    properties: [
        "cppflags",
        "header_libs",
    ],
}

soong_config_module_type {
    name: "camera_skip_kind_check",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    bool_variables: ["camera_skip_kind_check"],
    properties: [
        "cppflags",
    ],
}

camera_skip_kind_check {
    name: "camera_skip_kind_check_defaults",
    soong_config_variables: {
        camera_skip_kind_check: {
            cppflags: [
                "-DCAMERA_SKIP_KIND_CHECK",
                "-Wno-overloaded-virtual",
            ],
        },
    },
}

surfaceflinger_qcom_extensions {
    name: "surfaceflinger_qcom_ext_defaults",
    soong_config_variables: {
        qcom_display_headers_namespace: {
            cppflags: ["-DQCOM_UM_FAMILY"],
            header_libs: ["//%s:display_intf_headers"],
        },
    },
}

soong_config_module_type {
    name: "no_camera_smooth_apis",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    bool_variables: ["no_camera_smooth_apis"],
    properties: ["cppflags"],
}

no_camera_smooth_apis {
    name: "no_camera_smooth_apis_defaults",
    soong_config_variables: {
        no_camera_smooth_apis: {
            cppflags: ["-DTARGET_HAS_NO_CAMERA_SMOOTH_APIS"],
        },
    },
}

soong_config_module_type {
    name: "camera_needs_client_info",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    bool_variables: ["camera_needs_client_info"],
    properties: ["cppflags"],
}

camera_needs_client_info {
    name: "camera_needs_client_info_defaults",
    soong_config_variables: {
        camera_needs_client_info: {
            cppflags: ["-DTARGET_NEEDS_CLIENT_INFO"],
        },
    },
}

soong_config_module_type {
    name: "qti_camera_device",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    bool_variables: ["uses_qti_camera_device"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

qti_camera_device {
    name: "qti_camera_device_defaults",
    soong_config_variables: {
        uses_qti_camera_device: {
            cppflags: ["-DQTI_CAMERA_DEVICE"],
            shared_libs: ["vendor.qti.hardware.camera.device@1.0"],
        },
    },
}

soong_config_module_type {
    name: "vendor_init",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["target_init_vendor_lib"],
    properties: ["whole_static_libs"],
}

vendor_init {
    name: "vendor_init_defaults",
    soong_config_variables: {
        target_init_vendor_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "qti_cryptfshw_qsee",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    bool_variables: ["should_wait_for_qsee"],
    properties: ["cflags"],
}

qti_cryptfshw_qsee {
    name: "qti_cryptfshw_qsee_defaults",
    soong_config_variables: {
        should_wait_for_qsee: {
            cflags: ["-DWAIT_FOR_QSEE"],
        },
    },
}

soong_config_module_type {
    name: "extended_compress_format",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    bool_variables: ["supports_extended_compress_format"],
    properties: ["cflags"],
}

extended_compress_format {
    name: "extended_compress_format_defaults",
    soong_config_variables: {
        supports_extended_compress_format: {
            cflags: ["-DENABLE_EXTENDED_COMPRESS_FORMAT"],
        },
    },
}

soong_config_module_type {
    name: "power_libperfmgr",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["target_power_libperfmgr_mode_extension_lib"],
    properties: [
        "whole_static_libs",
    ],
}

power_libperfmgr {
    name: "power_libperfmgr_defaults",
    soong_config_variables: {
        target_power_libperfmgr_mode_extension_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "qti_vibrator_hal",
    module_type: "cc_defaults",
    config_namespace: "lineageQcomVars",
    bool_variables: ["qti_vibrator_use_effect_stream"],
    value_variables: ["qti_vibrator_effect_lib"],
    properties: [
        "cppflags",
        "shared_libs",
    ],
}

qti_vibrator_hal {
    name: "qti_vibrator_hal_defaults",
    soong_config_variables: {
        qti_vibrator_use_effect_stream: {
            cppflags: ["-DUSE_EFFECT_STREAM"],
        },
        qti_vibrator_effect_lib: {
            shared_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "libcameraservice_ext_lib",
    module_type: "cc_defaults",
    config_namespace: "lineageGlobalVars",
    value_variables: ["target_libcameraservice_ext_lib"],
    properties: [
        "cppflags",
        "whole_static_libs",
    ],
}

libcameraservice_ext_lib {
    name: "libcameraservice_ext_lib_defaults",
    soong_config_variables: {
        target_libcameraservice_ext_lib: {
            cppflags: ["-DTARGET_PROVIDES_CAMERA_PROVIDER_EXT_LIB"],
            whole_static_libs: ["%s"],
        },
    },
}

cc_library_headers {
    name: "prebuilt_kernel_headers",
    defaults: ["prebuilt_kernel_header_defaults"],
}
